关于计算机的常识:
一台计算机的组成硬件和外部设备:
硬件: CPU, GPU(显卡), 散热, 主板, 内存, 硬盘
外部设备: 显示屏, 扬声器, 鼠标, 键盘
最重要的硬件: CPU(中央处理器)

输入设备: 鼠标, 键盘
输出设备: 显示屏, 扬声器

存储设备: 内存, 硬盘, 寄存器, 缓存, 光盘
存储设备的速度从快到慢排序:
寄存器 > 缓存 > 内存 > 硬盘
存储设备的容量从大到小排序:
硬盘 > 内存 > 缓存 > 寄存器
Byte(字节) 
K, M, G, T
B *1024 -> KB -> MB -> GB -> TB

IP地址大概长什么样:
一共4段数字, 每段用 . 分开, 每段取值是0~255
192.168.0.255

网络的传输速度(带宽): 单位是 bps 比特每秒
1B = 8 bit(比特, 位) 
百兆宽带: 带宽为 100Mbps 的宽带
K : 千
M : 兆
G : 吉

100Mbps = 12.5MB/s
1000Mbps = 125MB/s

上传: 上行(上传文件的速度)
接收: 下行(下载文件的速度)

顶级域名, 次级域名.. 概念
域名: 网址去掉前缀
baidu.com
中间的.就把不同的单词分为了不同级别的域名
顶级域名: 最右侧的域名
往左依次降级


1. 语言分类:
高级语言->汇编语言->机器语言
高级语言: 类似人类语言的编程语言,
    便于人类编写程序
汇编语言: 和机器语言一一对应的一些命令,
    对人类来说比机器语言好理解, 比机器
    语言高级一点
机器语言: 机器能够理解的语言, 是一串二进制代码
    对于人类来说很难理解
如果要运行高级语言, 要先做什么? 
编译, 解释(翻译)
编译: 将所有代码一次性翻译
C, C++, Java 是编译型语言
解释: 将代码逐行翻译
Python, Scratch 是解释型语言
虽然翻译方式有区别, 但都需要翻译, 不能直接运行


main() 函数 -- 主函数
主函数的名字不能变 
一个程序只能有一个主函数

注释: 对于编译器来说就是空白, 相当于没写这行

标识符: C++中各种东西的名字(变量名, 函数名..)
identifier -- 直译就是标识符
如果在编译器警告或者报错里面看到这个单词, 
要知道它是什么意思

编译器警告: 写的内容可以通过编译, 但可能有问题
编译器报错: 写的内容不能通过编译

标识符可以由大, 小写英文字母, 数字, 下划线组成
不能由数字开头, 不能包含特殊字符(+ - *..)

一个程序由三种不同的结构组成:
顺序结构
分支(选择)结构
循环结构

伪代码: 类似编程语言, 但不是真的编程语言
if (XXX) {AAA} <- C++ 语言

if XXX THEN -> AAA <- 伪代码

while (!(a > 10)) {
    ..
}

C, C++, Python, Scratch, Java 
都是高级语言


ASCII 编码:
表示字符和整数一一对应的一张表
字符在编译器看来就是整数
写 'A' 实际上和写 65 是一个效果
char 是字符类型, 也可以说它是整数类型
char 占 1 字节, 能够表示的整数范围-128 ~ 127
其中只有 0 ~ 127 是表示字符的
所以我们能写出来的字符都是正整数
需要掌握:
1. 大小写英文字母字符
    'A' == 65
    A B C D E F
    'F' == 65+5 = 70
    'a' == 97

    判断一个字符 c 是否是大写字母
    if ('A' <= c && c <= 'Z')
    isupper(c) -- <cctype>
    判断一个字符 c 是否是小写字母
    if (c >= 'a' && c <= 'z')
    islower(c) 

    大小写转换
    c -> 小写, c = 'F'
    'A' -> 'a'
    'a' + c - 'A' 
    'a' + 'F' - 'A';
   c2 = tolower(c1) 
   这里不用判断c1是否是大写
   如果c1不是大写字母, 那么就不会进行转换
    C -> 大写, c = 'f'
    'A' + ('f' - 'a')
    A B C D E F
    1 2 3 4 5 6    6-1 = 5
    a b c d e f
    toupper(c)
2. 数字字符
    '0' == 48
    判断 c 是否是数字字符
    if (c >= '0' && c <= '9')
    isdigit(c)
剩下的字符都可以通过这三个推出来
3. 常用的特殊字符 + - * 等字符也属于ASCII码表
4. '\n' -- 换行符
5. '\0'(对于的整数是 0) -- 空字符

中文在不在其中? 不在


类型转换:
1. 隐式转换
    没有明确写进行转换的代码, 编译器帮我们转了
    int a = 3.14;
2. 显式转换(强制转换)
    写代码明确告诉编译器要进行转换
    int a = (int)3.14;
    (目标类型)数据   可以得到转换后的数据

循环输入
1. 已知需要输入多少个(通常是 n 个)数据
int n;
cin >> n;
for (int i = 0; i < n; ++i) {
    // 每个数据都需要保存到变量中
    int x;
    cin >> x;
    每次循环 x 保存的就是一个新数据
}

2. 输入的次数未知
2.1 没有特定条件限制, 需要读到数据的末尾
    int x;
    while (cin >> x) {
        // 处理 x
        等到读到末尾, 循环会自动结束
    }
2.2 有特定条件限制
while (true) {
    if (满足特定条件) {
        break;
    }
    cin >> 
}

cin 不能输入空格字符
cin.get()

char x;
while(cin.get(x)) {
    
}

 float 4
 double 8
3.14 -> 31.4

1字节的类型：bool，char(-128~127)
Byte 1B 8bit  
127 -- 1111 1111
0000 0000 ~ 1111 1111

4字节：int，float

8字节：double，long long
int a = 10; // int 最大值大约是21亿
long long b = 10;

switch(a) {
    case 1:
}

cout 